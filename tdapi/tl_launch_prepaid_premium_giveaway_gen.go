// Code generated by gotdgen, DO NOT EDIT.

package tdapi

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/KoNekoD/td/bin"
	"github.com/KoNekoD/td/tdjson"
	"github.com/KoNekoD/td/tdp"
	"github.com/KoNekoD/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// LaunchPrepaidPremiumGiveawayRequest represents TL type `launchPrepaidPremiumGiveaway#5328fea1`.
type LaunchPrepaidPremiumGiveawayRequest struct {
	// Unique identifier of the prepaid giveaway
	GiveawayID int64
	// Giveaway parameters
	Parameters PremiumGiveawayParameters
}

// LaunchPrepaidPremiumGiveawayRequestTypeID is TL type id of LaunchPrepaidPremiumGiveawayRequest.
const LaunchPrepaidPremiumGiveawayRequestTypeID = 0x5328fea1

// Ensuring interfaces in compile-time for LaunchPrepaidPremiumGiveawayRequest.
var (
	_ bin.Encoder     = &LaunchPrepaidPremiumGiveawayRequest{}
	_ bin.Decoder     = &LaunchPrepaidPremiumGiveawayRequest{}
	_ bin.BareEncoder = &LaunchPrepaidPremiumGiveawayRequest{}
	_ bin.BareDecoder = &LaunchPrepaidPremiumGiveawayRequest{}
)

func (l *LaunchPrepaidPremiumGiveawayRequest) Zero() bool {
	if l == nil {
		return true
	}
	if !(l.GiveawayID == 0) {
		return false
	}
	if !(l.Parameters.Zero()) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (l *LaunchPrepaidPremiumGiveawayRequest) String() string {
	if l == nil {
		return "LaunchPrepaidPremiumGiveawayRequest(nil)"
	}
	type Alias LaunchPrepaidPremiumGiveawayRequest
	return fmt.Sprintf("LaunchPrepaidPremiumGiveawayRequest%+v", Alias(*l))
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*LaunchPrepaidPremiumGiveawayRequest) TypeID() uint32 {
	return LaunchPrepaidPremiumGiveawayRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*LaunchPrepaidPremiumGiveawayRequest) TypeName() string {
	return "launchPrepaidPremiumGiveaway"
}

// TypeInfo returns info about TL type.
func (l *LaunchPrepaidPremiumGiveawayRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "launchPrepaidPremiumGiveaway",
		ID:   LaunchPrepaidPremiumGiveawayRequestTypeID,
	}
	if l == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "GiveawayID",
			SchemaName: "giveaway_id",
		},
		{
			Name:       "Parameters",
			SchemaName: "parameters",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (l *LaunchPrepaidPremiumGiveawayRequest) Encode(b *bin.Buffer) error {
	if l == nil {
		return fmt.Errorf("can't encode launchPrepaidPremiumGiveaway#5328fea1 as nil")
	}
	b.PutID(LaunchPrepaidPremiumGiveawayRequestTypeID)
	return l.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (l *LaunchPrepaidPremiumGiveawayRequest) EncodeBare(b *bin.Buffer) error {
	if l == nil {
		return fmt.Errorf("can't encode launchPrepaidPremiumGiveaway#5328fea1 as nil")
	}
	b.PutLong(l.GiveawayID)
	if err := l.Parameters.Encode(b); err != nil {
		return fmt.Errorf("unable to encode launchPrepaidPremiumGiveaway#5328fea1: field parameters: %w", err)
	}
	return nil
}

// Decode implements bin.Decoder.
func (l *LaunchPrepaidPremiumGiveawayRequest) Decode(b *bin.Buffer) error {
	if l == nil {
		return fmt.Errorf("can't decode launchPrepaidPremiumGiveaway#5328fea1 to nil")
	}
	if err := b.ConsumeID(LaunchPrepaidPremiumGiveawayRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode launchPrepaidPremiumGiveaway#5328fea1: %w", err)
	}
	return l.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (l *LaunchPrepaidPremiumGiveawayRequest) DecodeBare(b *bin.Buffer) error {
	if l == nil {
		return fmt.Errorf("can't decode launchPrepaidPremiumGiveaway#5328fea1 to nil")
	}
	{
		value, err := b.Long()
		if err != nil {
			return fmt.Errorf("unable to decode launchPrepaidPremiumGiveaway#5328fea1: field giveaway_id: %w", err)
		}
		l.GiveawayID = value
	}
	{
		if err := l.Parameters.Decode(b); err != nil {
			return fmt.Errorf("unable to decode launchPrepaidPremiumGiveaway#5328fea1: field parameters: %w", err)
		}
	}
	return nil
}

// EncodeTDLibJSON implements tdjson.TDLibEncoder.
func (l *LaunchPrepaidPremiumGiveawayRequest) EncodeTDLibJSON(b tdjson.Encoder) error {
	if l == nil {
		return fmt.Errorf("can't encode launchPrepaidPremiumGiveaway#5328fea1 as nil")
	}
	b.ObjStart()
	b.PutID("launchPrepaidPremiumGiveaway")
	b.Comma()
	b.FieldStart("giveaway_id")
	b.PutLong(l.GiveawayID)
	b.Comma()
	b.FieldStart("parameters")
	if err := l.Parameters.EncodeTDLibJSON(b); err != nil {
		return fmt.Errorf("unable to encode launchPrepaidPremiumGiveaway#5328fea1: field parameters: %w", err)
	}
	b.Comma()
	b.StripComma()
	b.ObjEnd()
	return nil
}

// DecodeTDLibJSON implements tdjson.TDLibDecoder.
func (l *LaunchPrepaidPremiumGiveawayRequest) DecodeTDLibJSON(b tdjson.Decoder) error {
	if l == nil {
		return fmt.Errorf("can't decode launchPrepaidPremiumGiveaway#5328fea1 to nil")
	}

	return b.Obj(func(b tdjson.Decoder, key []byte) error {
		switch string(key) {
		case tdjson.TypeField:
			if err := b.ConsumeID("launchPrepaidPremiumGiveaway"); err != nil {
				return fmt.Errorf("unable to decode launchPrepaidPremiumGiveaway#5328fea1: %w", err)
			}
		case "giveaway_id":
			value, err := b.Long()
			if err != nil {
				return fmt.Errorf("unable to decode launchPrepaidPremiumGiveaway#5328fea1: field giveaway_id: %w", err)
			}
			l.GiveawayID = value
		case "parameters":
			if err := l.Parameters.DecodeTDLibJSON(b); err != nil {
				return fmt.Errorf("unable to decode launchPrepaidPremiumGiveaway#5328fea1: field parameters: %w", err)
			}
		default:
			return b.Skip()
		}
		return nil
	})
}

// GetGiveawayID returns value of GiveawayID field.
func (l *LaunchPrepaidPremiumGiveawayRequest) GetGiveawayID() (value int64) {
	if l == nil {
		return
	}
	return l.GiveawayID
}

// GetParameters returns value of Parameters field.
func (l *LaunchPrepaidPremiumGiveawayRequest) GetParameters() (value PremiumGiveawayParameters) {
	if l == nil {
		return
	}
	return l.Parameters
}

// LaunchPrepaidPremiumGiveaway invokes method launchPrepaidPremiumGiveaway#5328fea1 returning error if any.
func (c *Client) LaunchPrepaidPremiumGiveaway(ctx context.Context, request *LaunchPrepaidPremiumGiveawayRequest) error {
	var ok Ok

	if err := c.rpc.Invoke(ctx, request, &ok); err != nil {
		return err
	}
	return nil
}
